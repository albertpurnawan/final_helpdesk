class TicketPoolModel {
  String closeticketdate;
  String userratedate;
  String updatedate;
  String createdate;
  String scheduledate;
  String email;
  String createby;
  String isquickresponsehelpdesk;
  String subcategory2;
  String title;
  String subcategory1;
  String problemidentification;
  String docno;
  String description;
  String updateby;
  String supportcategory;
  String attachments;
  String category;
  String worklocationcode;
  String correctiveaction;
  String id;
  String notes;
  String assigned;
  String userid;
  String modulecode;
  String system;
  String status;
  String supporttype;
  String username;
  String type;
  String communicationby;
  String updatectr;
  String repairtype;
  String application;
  String phonenumber;
  String t_ticket_id;
  String rate;
  String assignedname;
  String createbyname;
  String requestforworklocation;
  String d_comment;
  String task;

  TicketPoolModel(
      {required this.closeticketdate,
      required this.userratedate,
      required this.updatedate,
      required this.createdate,
      required this.scheduledate,
      required this.email,
      required this.createby,
      required this.isquickresponsehelpdesk,
      required this.subcategory2,
      required this.title,
      required this.subcategory1,
      required this.problemidentification,
      required this.docno,
      required this.description,
      required this.updateby,
      required this.supportcategory,
      required this.attachments,
      required this.category,
      required this.worklocationcode,
      required this.correctiveaction,
      required this.id,
      required this.notes,
      required this.assigned,
      required this.userid,
      required this.modulecode,
      required this.system,
      required this.status,
      required this.supporttype,
      required this.username,
      required this.type,
      required this.communicationby,
      required this.updatectr,
      required this.repairtype,
      required this.application,
      required this.phonenumber,
      required this.t_ticket_id,
      required this.rate,
      required this.assignedname,
      required this.createbyname,
      required this.requestforworklocation,
      required this.d_comment,
      required this.task});

  Map<String, dynamic> toMap() {
    return {
      "closeticketdate": closeticketdate,
      "userratedate": userratedate,
      "updatedate": updatedate,
      "createdate": createdate,
      "scheduledate": scheduledate,
      "email": email,
      "createby": createby,
      "isquickresponsehelpdesk": isquickresponsehelpdesk,
      "subcategory2": subcategory2,
      "title": title,
      "subcategory1": subcategory1,
      "problemidentification": problemidentification,
      "docno": docno,
      "description": description,
      "updateby": updateby,
      "supportcategory": supportcategory,
      "attachments": attachments,
      "category": category,
      "worklocationcode": worklocationcode,
      "correctiveaction": correctiveaction,
      "id": id,
      "notes": notes,
      "assigned": assigned,
      "userid": userid,
      "modulecode": modulecode,
      "system": system,
      "status": status,
      "supporttype": supporttype,
      "username": username,
      "type": type,
      "communicationby": communicationby,
      "updatectr": updatectr,
      "repairtype": repairtype,
      "application": application,
      "phonenumber": phonenumber,
      "t_ticket_id": t_ticket_id,
      "rate": rate,
      "assignedname": assignedname,
      "createbyname": createbyname,
      "requestforworklocation": requestforworklocation,
      "d_comment": d_comment,
      "task": task
    };
  }

  factory TicketPoolModel.fromMap(Map<String, dynamic> map) {
    return TicketPoolModel(
        closeticketdate: map['closeticketdate'].toString(),
        userratedate: map['userratedate'].toString(),
        updatedate: map['updatedate'].toString(),
        createdate: map['createdate'],
        scheduledate: map['scheduledate'].toString(),
        email: map['email'].toString(),
        createby: map['createby'].toString(),
        isquickresponsehelpdesk: map['isquickresponsehelpdesk'].toString(),
        subcategory2: map['subcategory2'].toString(),
        title: map['title'].toString(),
        subcategory1: map['subcategory1'].toString(),
        problemidentification: map['problemidentification'].toString(),
        docno: map['docno'].toString(),
        description: map['description'].toString(),
        updateby: map['updateby'].toString(),
        supportcategory: map['supportcategory'].toString(),
        attachments: map['attachments'].toString(),
        category: map['category'].toString(),
        worklocationcode: map['worklocationcode'].toString(),
        correctiveaction: map['correctiveaction'].toString(),
        id: map['id'].toString(),
        notes: map['notes'].toString(),
        assigned: map['assigned'].toString(),
        userid: map['userid'].toString(),
        modulecode: map['modulecode'].toString(),
        system: map['system'].toString(),
        status: map['status'].toString(),
        supporttype: map['supporttype'].toString(),
        username: map['username'].toString(),
        type: map['type'].toString(),
        communicationby: map['communicationby'].toString(),
        updatectr: map['updatectr'].toString(),
        repairtype: map['repairtype'].toString(),
        application: map['application'].toString(),
        phonenumber: map['phonenumber'].toString(),
        t_ticket_id: map['t_ticket_id'].toString(),
        rate: map['rate'].toString(),
        assignedname: map['assignedname'].toString(),
        createbyname: map['createbyname'].toString(),
        requestforworklocation: map['requestforworklocation'].toString(),
        d_comment: map['d_comment'].toString(),
        task: map['task'].toString());
  }
}
